kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
    meta.helm.sh/release-name: azure-monitor-metrics-adapter-helmrelease
    meta.helm.sh/release-namespace: 64626a0a9ba6e300017e62ce
  creationTimestamp: "2023-05-17T17:51:04Z"
  generation: 4
  labels:
    app.kubernetes.io/managed-by: Helm
    component: ama-metrics
    helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
    helm.toolkit.fluxcd.io/namespace: 64626a0a9ba6e300017e62ce
    overlaymgr-ignore: "true"
  name: ama-metrics
  namespace: kube-system
  resourceVersion: "1620947"
  uid: 4d8daad5-94f5-4056-bac0-4441f3d005a6
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      rsName: ama-metrics
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        agentVersion: 0.0.0.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        schema-versions: v1
      creationTimestamp: null
      labels:
        kubernetes.azure.com/managedby: aks
        overlaymgr-ignore: "true"
        rsName: ama-metrics
    spec:
      dnsPolicy: ClusterFirst
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: ama-metrics-serviceaccount
      serviceAccountName: ama-metrics-serviceaccount
      terminationGracePeriodSeconds: 30
      containers:
      - env:
        - name: CLUSTER
          value: /subscriptions/feb5b150-60fe-4441-be73-8c02a524f55a/resourceGroups/standalone-2305153jfhlx/providers/Microsoft.ContainerService/managedClusters/standalone-2305153jfhlx-cx-1
        - name: AKSREGION
          value: eastus
        - name: MAC
          value: "true"
        - name: AZMON_COLLECT_ENV
          value: "false"
        - name: customEnvironment
          value: azurepubliccloud
        - name: OMS_TLD
          value: opinsights.azure.com
        - name: CONTROLLER_TYPE
          value: ReplicaSet
        - name: NODE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONTAINER_CPU_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: prometheus-collector
              divisor: 1m
              resource: limits.cpu
        - name: CONTAINER_MEMORY_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: prometheus-collector
              divisor: 1Mi
              resource: limits.memory
        - name: KUBE_STATE_NAME
          value: ama-metrics-ksm
        - name: NODE_EXPORTER_NAME
        - name: NODE_EXPORTER_TARGETPORT
          value: "19100"
        - name: KUBE_STATE_VERSION
          value: mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.8.1
        - name: NODE_EXPORTER_VERSION
        - name: AGENT_VERSION
          value: 6.7.0-main-05-04-2023-4450ad10
        - name: MODE
          value: advanced
        - name: WINMODE
        - name: MINIMAL_INGESTION_PROFILE
          value: "true"
        image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.7.0-main-05-04-2023-4450ad10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /opt/microsoft/liveness/livenessprobe.sh
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        name: prometheus-collector
        resources:
          limits:
            cpu: "7"
            memory: 14Gi
          requests:
            cpu: 150m
            memory: 500Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config/settings
          name: settings-vol-config
          readOnly: true
        - mountPath: /etc/config/settings/prometheus
          name: prometheus-config-vol
          readOnly: true
        - mountPath: /var/log/containers
          name: host-log-containers
          readOnly: true
        - mountPath: /var/log/pods
          name: host-log-pods
          readOnly: true
        - mountPath: /anchors/mariner
          name: anchors-mariner
          readOnly: true
        - mountPath: /anchors/ubuntu
          name: anchors-ubuntu
          readOnly: true
        - mountPath: /etc/kubernetes/kubeconfig
          name: kubeconfig
          readOnly: true
        - mountPath: /etc/kubernetes/secrets
          name: kubernetes-secrets
          readOnly: true
      - args:
        - --secret-namespace=kube-system
        - --secret-name=aad-msi-auth-token
        - --token-server-listening-port=7777
        - --health-server-listening-port=9999
        command:
        - /addon-token-adapter
        env:
        - name: AZMON_COLLECT_ENV
          value: "false"
        image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.221118.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 9999
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: addon-token-adapter
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 20m
            memory: 30Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kubernetes.azure.com/mode
                operator: In
                values:
                - system
            weight: 100
          - preference:
              matchExpressions:
              - key: azuremonitor/metrics.replica.preferred
                operator: In
                values:
                - "true"
            weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: type
                operator: NotIn
                values:
                - virtual-kubelet
              - key: kubernetes.azure.com/cluster
                operator: Exists
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: ama-metrics-settings-configmap
          optional: true
        name: settings-vol-config
      - configMap:
          defaultMode: 420
          name: ama-metrics-prometheus-config
          optional: true
        name: prometheus-config-vol
      - hostPath:
          path: /var/log/containers
          type: ""
        name: host-log-containers
      - hostPath:
          path: /var/log/pods
          type: ""
        name: host-log-pods
      - hostPath:
          path: /etc/pki/ca-trust/anchors/
          type: DirectoryOrCreate
        name: anchors-mariner
      - hostPath:
          path: /usr/local/share/ca-certificates/
          type: DirectoryOrCreate
        name: anchors-ubuntu
      - name: kubeconfig
        secret:
          defaultMode: 420
          secretName: kubeconfig-file
      - name: kubernetes-secrets
        projected:
          defaultMode: 420
          sources:
          - secret:
              name: kube-apiserver-ssl
          - secret:
              name: kube-apiserver-token
          - secret:
              name: etcd-client-tls